├──__tests__                     # Тесты jest (unit-тесты)
│   ├── api-tests                # Тесты сгенерированных сваггером методов API (по спецификации openapi)
│   │   ├── auth.test.ts         # Категория Auth в соответствии со спецификацией
│   │   └── brands.test.ts       # -//- Brands
├── api
│   ├── Api.ts                   # Класс для взаимодействия с API (точка обращения к сгененрированному коду)
│   ├── data-contracts.ts        # Определения данных для взаимодействия с API
│   ├── http-client.ts           # HTTP клиент для отправки запросов к API
│   └── Id.ts                    # Интерфейс для уникальных идентификаторов
├── Components                   # Папка для компонентов
|   ├── authorization            # Компоненты для форм авторизации и регистрации
|   |   ├── AuthWrapper.tsx                 # Обертка с логотипом для страниц авторизации и регистрации
|   |   ├── LoginForm.tsx                   # Форма авторизации
|   |   └── RegistrationForm.tsx            # Форма регистрации
│   ├──admin                    # Компоненты для администратора
│   │   ├── CustomerInquiries.tsx           # Запросы покупателей
│   │   ├── SellerFeed.tsx                  # Лента новостей продавцов
│   │   └── SellerProductCatalog.tsx        # Каталог продуктов продавцов
│   ├── brand                    # Компоненты для представителей брендов
│   │   ├── 
│   │   ├── 
│   │   └── 
│   ├── common                   # Общие компоненты
│   │   ├── hoc                             # HOC (Higher Order Components)
│   │   │   ├── 
│   │   │   ├── withAuthLogic.tsx           # HOC для добавления повторяющейся логики в компонентах авторизации и регистрации
│   │   │   └── 
│   │   ├── Button.tsx                      # Кнопка
│   │   ├── Info.tsx                        # Компонент для вывода иформирующего сообщения
│   │   ├── Input.txt                       # Инпут
│   │   ├── InputsList.txt                  # Компонент для рендера нескольких инпутов
│   │   ├── Logo.tsx                        # Логотип (с кнопками)
│   │   ├── LogOut.tsx                      # Кнопка выйти (со своей логикой)
│   │   ├── Nav.tsx                         # Навигационная панель
│   │   └── Product.tsx                     # Компонент продукта
│   ├── user                                # Компоненты для покупателей
│   │   ├── Profile.tsx                     # Профиль пользователя
│   │   ├── ProfileItem.tsx                 # Компонент в профиле
│   │   └── Wardrobe.tsx                    # Гардероб покупателей
├── context                      # Компоненты окружения (контекст)
│   └── AuthProvider.tsx         # Компонент для хранеения и изменения переменной isAuth
├── hooks                        # Папка для пользовательских хуков
│   ├── useApi.tsx               # Хук для обращения к серверу
│   ├── useAuth.tsx              # Хук для аутентификации
│   └── IUniqueUsername.tsx      # Хук проверки уникальности именю пользователя
├── pages                        # Папка для страниц
│   ├── Authorization.tsx        # Страница с кнопками для входа или регистрации
│   ├── Home.tsx                 # Домашняя страница
│   ├── LoginPage.tsx            # Страница входа
│   └── RegistrationPage.tsx     # Страница регистрации
├── types                        # Папка для типов
│   ├── interfaces               # Папка для интерфейсов
│   │   ├── ApiResponses         # Интерфейсы ответов, полученных с сервера (для дополнительной безопасности)
│   │   │   ├── IApiResponse.ts              # Обобщенный ответ с сервера, содержащий поле data
│   │   │   ├── IAuthCreate.ts               # Ответ по запросу authCreate
│   │   │   └── IAuthMeList.ts               # -//- authMeList(сгенерированный интерфейс UserModel расширенный полем status)
│   │   ├── componentsProps      # Интерфейсы пропсов компонентов
│   │   │   ├── IButtonProps.ts              # Интерфейс пропсов для компонента Button
│   │   │   ├── IInputProps.ts               # Интерфейс пропсов для компонента Input
│   │   │   ├── IInputsListProps.ts          # Интерфейс пропсов для компонента InputsList
│   │   │   ├── IFormProps.ts                # Интерфейс пропсов для компонентов LoginForm и RegistrationForm
│   │   │   └── IwithAuthLogicProps.ts       # Интерфейс пропсов для хока withAuthLogic
│   │   ├── IApiError.ts         # Интерфейс ошибки, которая может возникнуть при обращении к серверу
│   │   ├── IButtonProps.ts      # Интерфейс пропсов для кнопки
│   │   ├── IProduct.ts          # Интерфейс продукта
│   │   ├── IProfileItem.ts      # Интерфейс составляющей профиля пользователя
│   │   ├── IStyles.ts           # Интерфейс стилей для элемента
│   │   └── IUniqueUsername.ts   # Интерфейс для хука useUniqueUsername
│   ├── AuthContextType.ts       # Тип для контекста провайдера
│   └── NavContentType.ts        # Тип содержимого навигационной панели (включает в себя интерфейс для навигационной ссылки)
└── utils                        # Папка для утилит
│   ├── dataToLS.ts              # Утилиты для обработки данных перед внесением в localStorage
│   ├── encryption.ts            # Утилиты для шифрования данных (+ внесение в localStorage)
│   ├── expirationTime.ts        # Утилиты для преобразования времени истечения токенов в дату и проверки действия токенов
│   ├── format.ts                # Утилиты для форматирования данных
│   ├── getStyles.ts             # Утилиты для преобразования стилей в строку (для tailwind)
│   ├── navContent.ts            # Содержимое навигационной панели
│   ├── showBtn.ts               # Утилиты для условного отображения кнопки
│   └── validation.ts            # Утилиты для валидации данных
├── App.test.tsx                 # Тестирование компонента App
├── App.tsx                      # Главный компонент приложения
├── index.css                    # Файл стилей
├── index.tsx                    # Главный файл приложения
├── react-app-env.d.ts           # Файл описания окружения React
├── reportWebVitals.ts           # Файл отслеживания и отправки веб-метрик о производительности приложения
├── service-worker.ts            # Файл сервис-воркера
├── serviceWorkerRegistration.ts # Методы sw (подписка/отписка и т.д.)
└── setupTests.ts                # Файл настроек тестов
