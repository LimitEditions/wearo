├──__tests__                     # Тесты jest (unit-тесты)
│   ├── api-tests                # Тесты сгенерированных сваггером методов API (по спецификации openapi)
│   │   ├── auth.test.ts         # Категория Auth в соответствии со спецификацией
│   │   └── brands.test.ts       # -//- Brands
├── api
│   ├── Api.ts                   # Класс для взаимодействия с API (точка обращения к сгененрированному коду)
│   ├── data-contracts.ts        # Определения данных для взаимодействия с API
│   ├── http-client.ts           # HTTP клиент для отправки запросов к API
│   └── Id.ts                    # Интерфейс для уникальных идентификаторов
├── Components                   # Папка для компонентов
|   ├── authorization            # Компоненты для форм авторизации и регистрации
|   |   ├── AuthForm.tsx                    # Компонент, возвращающий форму регистрации или создания админа
|   |   ├── AuthWrapper.tsx                 # Обертка с логотипом для страниц авторизации и регистрации
|   |   ├── LoginForm.tsx                   # Форма авторизации
|   |   └── RegistrationForm.tsx            # Форма регистрации
|   ├── common                   # Общие компоненты
|   |   ├── hoc                             # HOC (Higher Order Components)
|   |   |   └── withAuthLogic.tsx                       # HOC для добавления повторяющейся логики в компонентах авторизации и регистрации
|   |   ├── ItemGroup                       # Папка компонентов для работы с Item
|   |   |   ├── Item.tsx                                # Компонент для создания однотипных данных
|   |   |   └── ItemsList.tsx                           # Компонент для создания списка данных
|   |   ├── ArrowRight.tsx                  # Стрелка вправо
|   |   ├── AvatarAndName.tsx               # Компонент для создания имени/названия с фото 
|   |   ├── Button.tsx                      # Кнопка
|   |   ├── DownloadFile.tsx                # Компонент для загрузки файлов
|   |   ├── EmployeeList.tsx                # Компонент для вывода списка сотрудников
|   |   ├── ErrorReq.tsx                    # Компонент, сообщающий об ошибке сервера
|   |   ├── Info.tsx                        # Компонент для вывода иформирующего сообщения
|   |   ├── Input.tsx                       # Инпут
|   |   ├── InputsList.txt                  # Компонент для рендера нескольких инпутов
|   |   ├── IsLoading.tsx                   # Компонент, сообщающий о загруке
|   |   ├── Logo.tsx                        # Логотип (с кнопками)
|   |   ├── LogOut.tsx                      # Кнопка выйти (со своей логикой)
|   |   ├── Modal.tsx                       # Всплывающее окно
|   |   ├── ModalsDelete                    # Всплывающие окна для удаления чего-либо
|   |   ├── Nav.tsx                         # Навигационная панель
|   |   ├── Photo.tsx                       # Фотография
|   |   ├── ProtectedRoute.tsx              # Компонентя для перенаправления авторизованного/неавторизованного пользователя
|   |   ├── RatingStart.tsx                 # Звезды рейтинга
|   |   ├── SearchInput.tsx                 # Поле поиска 
|   |   ├── SectionsTitle.tsx               # Название раздела
|   |   ├── Subscription.tsx                # Подписка на бренд 
|   |   └── SuccessfulContent.tsx           # Информирующий об успехе текст
|   ├── superadmin               # Папка для компонентов, относящихся к странице superadmin 
|   |   ├── AllAdmins.tsx                   # Компонент для вывода всех админов
|   |   ├── RequestButtons.tsx              # Кнопки отклонения и одобрения заявки на бренд 
|   |   ├── SuperadminInfo.tsx              # Вывод информации о superadmin 
|   |   └── TextItemsList.tsx               # Компоннт для вывода нескольких текстовых данных 
|   ├── user                     # Папка для компонентов, относящихся к странице user 
|   |   ├── Colors.tsx                      # Цвета
|   |   ├── CommentComponent                # Компонент для создания комментария 
|   |   ├── Confirm.tsx                     # Подтверждение почты/телефона
|   |   ├── Photos.tsx                      # Слайдер из фото 
|   |   ├── Pin.tsx                         # Изменение пин-кода 
|   |   ├── Post.tsx                        # Пост 
|   |   ├── Product.tsx                     # Продукт 
|   |   ├── Products.tsx                    # Список продуктов 
|   |   ├── Profile.tsx                     # Профиль пользователя
|   |   ├── ProfileItem.tsx                 # Компонент в профиле
|   |   └── Tips.tsx                        # Советы 
├── context                      # Компоненты окружения (контекст)
│   └── AuthProvider.tsx         # Компонент для хранеения и изменения переменной isAuth
├── hooks                        # Папка для пользовательских хуков
│   ├── useApi.tsx               # Хук для обращения к серверу
│   └── useAuth.tsx              # Хук для аутентификации
├── pages                        # Папка для страниц
│   ├── AdminGroup                          # Страницы администратора/суперадминистратора
|   |   ├── Contpol                                     # Страницы раздела "Управление" 
|   |   |   ├── Brands                                              # Страницы брендов 
|   |   |   |   ├── BrandInfoPage.tsx                               # Подробная информация о бренде 
|   |   |   |   └── BrandsPage.tsx                                  # Список брендов 
|   |   |   ├── Requests                                            # Страница запросов на создание бренда
|   |   |   |   ├── RequestInfoPage.tsx                             # Страница с подробной информацией о запросе
|   |   |   |   └── RequestsPage.tsx                                # Список запросов
|   |   |   ├── Users                                               # Страницы, относящиеся к user 
|   |   |   |   ├── EditUserInfo.tsx                                # Редактирование информации о пользователе 
|   |   |   |   ├── UserFavoritesPage.tsx                           # Избранное пользователя 
|   |   |   |   ├── UserInfoPage.tsx                                # Подробная информация о пользователе 
|   |   |   |   ├── UserScansPage.tsx                               # Сканирования пользователя 
|   |   |   |   ├── UsersPage.tsx                                   # Список пользователей
|   |   |   |   └── UserSubscriptionsPage.tsx                       # Список подписок пользователя 
|   |   |   ├── ControlPage.tsx                         # Страница "Управление"
|   |   |   └── PostsPage.tsx                           # Страница с постами 
|   |   ├── Settings                                    # Страницы раздела "Настройки"
|   |   |   ├── AddAdminPage.tsx                        # Страница добавления администратора 
|   |   |   ├── EnployeeDetailsPage.tsx                 # Подробная информация о сотруднике 
|   |   └── └── SettingsPage.tsx                        # Страница "Настройки"
│   ├── UserGroup                            # Страницы пользователя 
|   |   ├── BrandPage.tsx                    # Страница с брендами 
|   |   ├── CollectionPage.tsx               # Страница коллекции 
|   |   ├── CommentsPage.tsx                 # Страница комментариев 
|   |   ├── ConfirmPage.tsx                  # Страница подтверждения почты/телефона
|   |   ├── PostsPage.tsx                    # Страница с постами
|   |   ├── ProductPage.tsx                  # Страница продукта 
|   |   ├── ProfilePage.tsx                  # Страница профиля 
|   |   └── WardrobePage.tsx                 # Раздел "Гардероб"
│   ├── Authorization.tsx                    # Страница с кнопками "Войти" и "Зарегистрироваться" 
│   ├── Home.tsx                             # Домашняя страница 
│   ├── LoginPage.tsx                        # Страница авторизации 
│   └── RegistrationPage.tsx                 # Страница регистрации                
├── types                        # Папка для типов
│   ├── interfaces                           # Папка для интерфейсов
│   │   ├── ApiResponses                     # Интерфейсы ответов, полученных с сервера (для дополнительной безопасности)
│   │   │   ├── IApiResponse.ts              # Обобщенный ответ с сервера, содержащий поле data
│   │   │   ├── IAuthCreate.ts               # Ответ по запросу authCreate
│   │   │   └── IAuthMeList.ts               # -//- authMeList(сгенерированный интерфейс UserModel расширенный полем status)
│   │   ├── componentsProps      # Интерфейсы пропсов компонентов
│   │   │   ├── IButtonProps.ts              # Интерфейс пропсов для компонента Button
│   │   │   ├── IFormProps.ts                # Интерфейс пропсов для компонентов LoginForm и RegistrationForm
│   │   │   ├── IInputProps.ts               # Интерфейс пропсов для компонента Input
│   │   │   ├── IInputsListProps.ts          # Интерфейс пропсов для компонента InputsList
│   │   │   ├── IItemsListProps.ts           # Интерфейс пропсов для компонента ItemsList
│   │   │   ├── IModalProps.ts               # Интерфейс пропсов для всплывающих окон
│   │   │   ├── IModalsDeleteProps.ts        # Интерфейс пропсов для компонента ModalsDelete
│   │   │   ├── ISectionsTitle.tsx           # Интерфейс пропсов для заголовка раздела
│   │   │   ├── ITextItemsListProps.tsx      # Интерфейс пропсов для компонента TextItemsList
│   │   │   └── IwithAuthLogicProps.ts       # Интерфейс пропсов для хока withAuthLogic
│   │   ├── IApiError.ts         # Интерфейс ошибки, которая может возникнуть при обращении к серверу
│   │   ├── IItemProps.ts        # Интерфейс пропсов для компонента Item 
│   │   └── IStyles.ts           # Интерфейс стилей для элемента
│   ├── AuthContextType.ts       # Тип для контекста провайдера
│   └── NavContentType.ts        # Тип содержимого навигационной панели (включает в себя интерфейс для навигационной ссылки)
└── utils                        # Папка для утилит
│   ├── dataToLS.ts              # Утилиты для обработки данных перед внесением в localStorage
│   ├── encryption.ts            # Утилиты для шифрования данных (+ внесение в localStorage)
│   ├── expirationTime.ts        # Утилиты для преобразования времени истечения токенов в дату и проверки действия токенов
│   ├── format.ts                # Утилиты для форматирования данных
│   ├── getEmployeePosition.ts   # Утилита для получения должности сотрудника на русском языке
│   ├── getStyles.ts             # Утилиты для преобразования стилей в строку (для tailwind)
│   ├── getTextItems.ts          # Утилита для формирования списка полей с их значением и названием
│   ├── navContent.ts            # Содержимое навигационной панели
│   ├── showBtn.ts               # Утилиты для условного отображения кнопки
│   └── validation.ts            # Утилиты для валидации данных
├── App.test.tsx                 # Тестирование компонента App
├── App.tsx                      # Главный компонент приложения
├── index.css                    # Файл стилей
├── index.tsx                    # Главный файл приложения
├── react-app-env.d.ts           # Файл описания окружения React
├── reportWebVitals.ts           # Файл отслеживания и отправки веб-метрик о производительности приложения
├── service-worker.ts            # Файл сервис-воркера
├── serviceWorkerRegistration.ts # Методы sw (подписка/отписка и т.д.)
└── setupTests.ts                # Файл настроек тестов
